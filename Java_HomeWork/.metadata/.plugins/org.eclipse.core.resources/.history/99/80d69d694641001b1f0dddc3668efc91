package com.oop.method;

public class Test {
	int a = 100;
	static int s = 99;
	int b=0;

	public static void main(String[] args) {
		Test t = new Test();
		t.test1();
		//100
		//99

		t.test2();
		//100

		Test t3 = new Test();
		t.test3(t3);
		//10
		//t3의 a값은 10으로 변경되었음
		
		System.out.println(t3.a);
		//10

		t.test4(t);
		//1000
		
		System.out.println(t.b);
		

	}

	public void test1() {
		int a = 1000; //call by value, (call by reference 전혀 상관없음)
		int s = 999; //call by value, (call by reference 전혀 상관없음)
		System.out.println(this.a); //100(호출한 클래스의 a)
		System.out.println(Test.s); //99(static 값)
	}

	public void test2() {
		Test t = new Test();
		t.a = 1000; //새로 생성한 클래스 t의 a값 1000
		//call by value, (call by reference 전혀 상관없음)
		System.out.println(a);//100(호출한 클래스의 a)
	}

	public void test3(Test t) {
		t.a = 10; //(call by reference로 메소드를 탈출해도 변경된 값이 유지)
		this.a = 200; //call by value로
		this.b = 300;
		System.out.println(t.a);//10
	}

	public void test4(Test t) {
		t.a = 1000;  //(call by reference로 메소드를 탈출해도 변경된 값이 유지)
		System.out.println(this.a);//1000
	}
}
